/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package qa.recruiting.brazil;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;
import qa.recruiting.brazil.model.Checkout;
import qa.recruiting.brazil.model.Rule;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class CheckoutTest {

    @Test
    public void priceTest() throws IOException {
        assertEquals(0, getPrice(""));
        assertEquals( 50, getPrice("A"));
        assertEquals( 80, getPrice("AB"));
        assertEquals(115, getPrice("CDBA"));

        assertEquals(100, getPrice("AA"));
        assertEquals(130, getPrice("AAA"));
        assertEquals(180, getPrice("AAAA"));
        assertEquals(230, getPrice("AAAAA"));
        assertEquals(260, getPrice("AAAAAA"));

        assertEquals(160, getPrice("AAAB"));
        assertEquals(175, getPrice("AAABB"));
        assertEquals(190, getPrice("AAABBD"));
        assertEquals(190, getPrice("DABABA"));
    }

    @Test
    public void incrementalPriceTest() throws IOException {
        List<Rule> rules = getRules();
        Checkout checkout = new Checkout(rules);
        assertEquals(  0, checkout.getTotal());
        checkout.scan("A");
        assertEquals( 50, checkout.getTotal());
        checkout.scan("B");
        assertEquals( 80, checkout.getTotal());
        checkout.scan("A");
        assertEquals(130, checkout.getTotal());
        checkout.scan("A");
        assertEquals(160, checkout.getTotal());
        checkout.scan("B");
        assertEquals(175, checkout.getTotal());
    }

    private int getPrice(String items) throws IOException {
        List<Rule> rules = getRules();
        Checkout checkout = new Checkout(rules);
        items.chars()
                .mapToObj(character -> Character.toString(character))
                .forEach(checkout::scan);

        return checkout.getTotal();
    }

    private List<Rule> getRules() throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        String rulesPath = "/rules.json";
        InputStream inputStream = CheckoutTest.class.getResourceAsStream(rulesPath);
        List<Rule> rules = mapper.readValue(inputStream, new TypeReference<List<Rule>>(){});
        return rules;
    }

}
